{"version":3,"sources":["App.tsx","index.tsx"],"names":["end","Date","cycleData","due","App","useState","now","setNow","useEffect","timer","setInterval","clearInterval","diff","valueOf","total","passed","day","Math","floor","hour","minute","seconds","progress","Number","toFixed","className","style","fontSize","fontWeight","width","margin","round","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMAIMA,EAAM,IAAIC,KAAKC,EAAUF,KACzBG,EAAM,IAAIF,KAAKC,EAAUC,KAEhB,SAASC,IACtB,MAAsBC,mBAAS,IAAIJ,MAAnC,mBAAOK,EAAP,KAAYC,EAAZ,KACAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBH,EAAO,IAAIN,QACV,KAEH,OAAO,WACLU,cAAcF,MAEf,IAEH,IAAMG,EAAOT,EAAIU,UAAYP,EAAIO,UAC3BC,EAAQX,EAAIU,UAAYb,EAAIa,UAC5BE,EAAST,EAAIO,UAAYb,EAAIa,UAE7BG,EAAMC,KAAKC,MAAMN,EAAO,IAAO,GAAK,GAAK,IACzCO,EAAOF,KAAKC,OAAON,EAAa,GAANI,EAAW,GAAK,GAAK,KAAQ,IAAO,GAAK,IACnEI,EAASH,KAAKC,OACjBN,EAAa,GAANI,EAAW,GAAK,GAAK,IAAc,GAAPG,EAAY,GAAK,KAAQ,IAAO,IAEhEE,EAAUJ,KAAKC,OAClBN,EACO,GAANI,EAAW,GAAK,GAAK,IACd,GAAPG,EAAY,GAAK,IACR,GAATC,EAAc,KACd,KAGEE,EAAiD,IAAtCC,QAAQR,EAASD,GAAOU,QAAQ,IAEjD,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKC,MAAO,CAAEC,SAAU,OAAQC,WAAY,QAA5C,UACGX,KAAKC,MAAMN,EAAO,IAAO,GAAK,GAAK,IADtC,SAC4CO,EAD5C,eACoDC,EADpD,eAEGC,EAFH,YAIA,qBAAKK,MAAO,CAAEG,MAAO,OAAQC,OAAQ,UAArC,SACE,qBAAKL,UAAU,QAAf,SACE,sBAAKA,UAAS,kBAAaR,KAAKc,MAAMT,GAAxB,UAAd,UACE,qBAAKG,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,4BCtD7B,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAChC,EAAD,IAAQ4B,I","file":"static/js/main.c27913f2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport cycleData from \"./payment-cycle.json\";\nimport \"./styles.css\";\n\nconst end = new Date(cycleData.end);\nconst due = new Date(cycleData.due);\n\nexport default function App() {\n  const [now, setNow] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setNow(new Date());\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const diff = due.valueOf() - now.valueOf();\n  const total = due.valueOf() - end.valueOf();\n  const passed = now.valueOf() - end.valueOf();\n\n  const day = Math.floor(diff / 1000 / 60 / 60 / 24);\n  const hour = Math.floor((diff - day * 24 * 60 * 60 * 1000) / 1000 / 60 / 60);\n  const minute = Math.floor(\n    (diff - day * 24 * 60 * 60 * 1000 - hour * 60 * 60 * 1000) / 1000 / 60\n  );\n  const seconds = Math.floor(\n    (diff -\n      day * 24 * 60 * 60 * 1000 -\n      hour * 60 * 60 * 1000 -\n      minute * 60 * 1000) /\n      1000\n  );\n\n  const progress = Number((passed / total).toFixed(5)) * 100;\n\n  return (\n    <div className=\"App\">\n      <div style={{ fontSize: \"26px\", fontWeight: \"bold\" }}>\n        {Math.floor(diff / 1000 / 60 / 60 / 24)}天{hour}小时{minute}分钟\n        {seconds}秒\n      </div>\n      <div style={{ width: \"80vw\", margin: \"0 auto\" }}>\n        <div className=\"chart\">\n          <div className={`bar bar-${Math.round(progress)} white`}>\n            <div className=\"face top\">\n              <div className=\"growing-bar\"></div>\n            </div>\n            <div className=\"face side-0\">\n              <div className=\"growing-bar\"></div>\n            </div>\n            <div className=\"face floor\">\n              <div className=\"growing-bar\"></div>\n            </div>\n            <div className=\"face side-a\"></div>\n            <div className=\"face side-b\"></div>\n            <div className=\"face side-1\">\n              <div className=\"growing-bar\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from 'react-dom'\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement)\n"],"sourceRoot":""}